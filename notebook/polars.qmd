---
title: "Graph development"
format:
  html:
    code-fold: true
jupyter: python3
---

```{python}
import os 
os.chdir('..')
```

```{python}
import polars as pl
import json
```

```{python}
line = "F7220142000000000100000720564834                              U S DEPARTMENT OF AGRICULTURE      US DEPARTMENT OF AGRICULTURE       PO BOX 60000                                                          NEW ORLEANS                   LA701600001                                                                                                                                                                                                                                                                  20000000001957010119570101                1       1271    00000350 926140C               9261401 900000 000522S000509S000511S00007763030S0000000000000000000092                                                                00003                                                                              NN                                        LISTADO DE AGRICULTURA-U.S.                                                                                                                                                                                        "
decode_file = json.load(open("data/external/decode.json"))
```

```{python}
    def process_line(line):
        temp_df = []
        for key in decode_file:
            data = line[decode_file[key]['position']-1: decode_file[key]['position'] + decode_file[key]['length']-1]
            data = data.strip()
            temp_df.append(pl.Series(f"{key}", [data]))
        return temp_df
```

```{python}
pl.DataFrame(process_line(line))
```

```{python}
    def clean_txt(dev_file):
        df = pl.DataFrame({key: [] for key in decode_file.keys()})
        with TreadPoolExecute() as executor:
            lines = [line for line in open(dev_file, 'rb')]
            results = list(executor.map(process_line, lines))
        df = df.vstack(pl.DataFrame(results, schema=decode_file))
        return df

```